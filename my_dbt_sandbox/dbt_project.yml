
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'my_dbt_sandbox'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'my_dbt_sandbox'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  my_dbt_sandbox:
    # Config indicated by + and applies to all files under models/example/
    staging:
      +materialized: view # `view` é o default
      +schema: "dbt_stg" # Será concatenado com o valor de `schema` + "_" no arquivo `profiles.yml` 
    master_data:
      +materialized: table
      +schema: "dbt_md" # Será concatenado com o valor de `schema` + "_" no arquivo `profiles.yml` 
    ephemeral:
      +materialized: ephemeral # `view` é o default
    data_mart:
      +materialized: table
      +schema: "dbt_dm_vendas"  # Será concatenado com o valor de `schema` + "_" no arquivo `profiles.yml` 

seeds:
  +schema: "dbt_seeds"

snapshots:
  +target_schema: "dbt_sandbox_dbt_snapshots" # Não concatena - ao rodar, é usado este valor mesmo

vars:
    "valor_minimo_produto": 100.00
    "dbt_date:time_zone": "America/Sao_Paulo" # necessário para o package `dbt_date`